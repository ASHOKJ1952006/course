{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(()=>{// Check localStorage for saved theme preference\nconst savedTheme=localStorage.getItem('theme');if(savedTheme){return savedTheme==='dark';}// Check system preference if no saved preference\nreturn window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches;});useEffect(()=>{// Save theme preference to localStorage\nlocalStorage.setItem('theme',isDarkMode?'dark':'light');// Apply theme class to document root\nif(isDarkMode){document.documentElement.classList.add('dark-theme');document.documentElement.classList.remove('light-theme');}else{document.documentElement.classList.add('light-theme');document.documentElement.classList.remove('dark-theme');}},[isDarkMode]);useEffect(()=>{// Listen for system theme changes\nconst mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const handleChange=e=>{// Only auto-switch if user hasn't manually set a preference\nconst savedTheme=localStorage.getItem('theme');if(!savedTheme){setIsDarkMode(e.matches);}};mediaQuery.addEventListener('change',handleChange);return()=>mediaQuery.removeEventListener('change',handleChange);},[]);const toggleTheme=()=>{setIsDarkMode(prevMode=>!prevMode);};const value={isDarkMode,toggleTheme,theme:isDarkMode?'dark':'light'};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};export default ThemeContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","useTheme","context","Error","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","window","matchMedia","matches","setItem","document","documentElement","classList","add","remove","mediaQuery","handleChange","e","addEventListener","removeEventListener","toggleTheme","prevMode","value","theme","Provider"],"sources":["D:/course/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Check localStorage for saved theme preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme === 'dark';\n    }\n    // Check system preference if no saved preference\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n\n  useEffect(() => {\n    // Save theme preference to localStorage\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n\n    // Apply theme class to document root\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark-theme');\n      document.documentElement.classList.remove('light-theme');\n    } else {\n      document.documentElement.classList.add('light-theme');\n      document.documentElement.classList.remove('dark-theme');\n    }\n  }, [isDarkMode]);\n\n  useEffect(() => {\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => {\n      // Only auto-switch if user hasn't manually set a preference\n      const savedTheme = localStorage.getItem('theme');\n      if (!savedTheme) {\n        setIsDarkMode(e.matches);\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  const value = {\n    isDarkMode,\n    toggleTheme,\n    theme: isDarkMode ? 'dark' : 'light'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContext;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAM,CACjD;AACA,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAIF,UAAU,CAAE,CACd,MAAO,CAAAA,UAAU,GAAK,MAAM,CAC9B,CACA;AACA,MAAO,CAAAG,MAAM,CAACC,UAAU,EAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CACvF,CAAC,CAAC,CAEFjB,SAAS,CAAC,IAAM,CACd;AACAa,YAAY,CAACK,OAAO,CAAC,OAAO,CAAER,UAAU,CAAG,MAAM,CAAG,OAAO,CAAC,CAE5D;AACA,GAAIA,UAAU,CAAE,CACdS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,CACpDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC,CAC1D,CAAC,IAAM,CACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC,CACrDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC,CACzD,CACF,CAAC,CAAE,CAACb,UAAU,CAAC,CAAC,CAEhBV,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAwB,UAAU,CAAGT,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CACpE,KAAM,CAAAS,YAAY,CAAIC,CAAC,EAAK,CAC1B;AACA,KAAM,CAAAd,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAI,CAACF,UAAU,CAAE,CACfD,aAAa,CAACe,CAAC,CAACT,OAAO,CAAC,CAC1B,CACF,CAAC,CAEDO,UAAU,CAACG,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CACnD,MAAO,IAAMD,UAAU,CAACI,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CACrE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxBlB,aAAa,CAACmB,QAAQ,EAAI,CAACA,QAAQ,CAAC,CACtC,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZrB,UAAU,CACVmB,WAAW,CACXG,KAAK,CAAEtB,UAAU,CAAG,MAAM,CAAG,OAC/B,CAAC,CAED,mBACER,IAAA,CAACC,YAAY,CAAC8B,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAtB,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,cAAe,CAAAN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}