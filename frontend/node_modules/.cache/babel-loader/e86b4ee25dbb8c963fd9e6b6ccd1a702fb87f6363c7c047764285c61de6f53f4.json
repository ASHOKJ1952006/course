{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    'Content-Type': 'application/json',\n    ...(token && {\n      'Authorization': `Bearer ${token}`\n    })\n  };\n};\n\n// Helper function to handle API responses\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n  }\n  return response.json();\n};\n\n// Authentication APIs\nexport const login = async credentials => {\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(credentials)\n  });\n  return handleResponse(response);\n};\nexport const register = async userData => {\n  const response = await fetch(`${API_BASE_URL}/register`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(userData)\n  });\n  return handleResponse(response);\n};\n\n// User Profile APIs\nexport const getUserProfile = async () => {\n  const response = await fetch(`${API_BASE_URL}/profile`, {\n    method: 'GET',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};\nexport const updateUserProfile = async profileData => {\n  const response = await fetch(`${API_BASE_URL}/profile`, {\n    method: 'PUT',\n    headers: getAuthHeaders(),\n    body: JSON.stringify(profileData)\n  });\n  return handleResponse(response);\n};\n\n// Course APIs\nexport const getCourses = async (filters = {}) => {\n  const queryParams = new URLSearchParams();\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value && value !== 'all') {\n      queryParams.append(key, value);\n    }\n  });\n  const response = await fetch(`${API_BASE_URL}/courses?${queryParams}`, {\n    method: 'GET',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};\nexport const getCourseById = async courseId => {\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}`, {\n    method: 'GET',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};\nexport const enrollInCourse = async courseId => {\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}/enroll`, {\n    method: 'POST',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};\nexport const completeCourse = async (courseId, rating = null) => {\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}/complete`, {\n    method: 'POST',\n    headers: getAuthHeaders(),\n    body: JSON.stringify({\n      rating\n    })\n  });\n  return handleResponse(response);\n};\n\n// Recommendations API\nexport const getRecommendations = async () => {\n  const response = await fetch(`${API_BASE_URL}/recommendations`, {\n    method: 'GET',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};\n\n// Categories API\nexport const getCategories = async () => {\n  const response = await fetch(`${API_BASE_URL}/categories`, {\n    method: 'GET',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};\n\n// Seed data (for development)\nexport const seedData = async () => {\n  const response = await fetch(`${API_BASE_URL}/seed-data`, {\n    method: 'POST',\n    headers: getAuthHeaders()\n  });\n  return handleResponse(response);\n};","map":{"version":3,"names":["API_BASE_URL","getAuthHeaders","token","localStorage","getItem","handleResponse","response","ok","errorData","json","catch","Error","error","status","login","credentials","fetch","method","headers","body","JSON","stringify","register","userData","getUserProfile","updateUserProfile","profileData","getCourses","filters","queryParams","URLSearchParams","Object","entries","forEach","key","value","append","getCourseById","courseId","enrollInCourse","completeCourse","rating","getRecommendations","getCategories","seedData"],"sources":["C:/Users/ashok/OneDrive/Desktop/course-recommendation-system/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Helper function to get auth headers\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { 'Authorization': `Bearer ${token}` })\r\n  };\r\n};\r\n\r\n// Helper function to handle API responses\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Authentication APIs\r\nexport const login = async (credentials) => {\r\n  const response = await fetch(`${API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify(credentials)\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  const response = await fetch(`${API_BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify(userData)\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// User Profile APIs\r\nexport const getUserProfile = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/profile`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const updateUserProfile = async (profileData) => {\r\n  const response = await fetch(`${API_BASE_URL}/profile`, {\r\n    method: 'PUT',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify(profileData)\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Course APIs\r\nexport const getCourses = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  Object.entries(filters).forEach(([key, value]) => {\r\n    if (value && value !== 'all') {\r\n      queryParams.append(key, value);\r\n    }\r\n  });\r\n\r\n  const response = await fetch(`${API_BASE_URL}/courses?${queryParams}`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const getCourseById = async (courseId) => {\r\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const enrollInCourse = async (courseId) => {\r\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}/enroll`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const completeCourse = async (courseId, rating = null) => {\r\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}/complete`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify({ rating })\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Recommendations API\r\nexport const getRecommendations = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/recommendations`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Categories API\r\nexport const getCategories = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/categories`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Seed data (for development)\r\nexport const seedData = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/seed-data`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}