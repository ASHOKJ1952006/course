{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';// Components\nimport Header from'./components/Header';import Login from'./components/Login';import Register from'./components/Register';import Dashboard from'./components/Dashboard';import CourseList from'./components/CourseList';import CourseDetail from'./components/CourseDetail';import Profile from'./components/Profile';import Recommendations from'./components/Recommendations';import LoadingSpinner from'./components/LoadingSpinner';// Theme Provider\nimport{ThemeProvider}from'./contexts/ThemeContext';// API Service\nimport*as api from'./services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[currentView,setCurrentView]=useState('dashboard');const[selectedCourse,setSelectedCourse]=useState(null);const[loading,setLoading]=useState(true);const[notification,setNotification]=useState(null);// Check if user is logged in on app load\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){fetchUserProfile();}else{setLoading(false);}},[]);const fetchUserProfile=async()=>{try{const userData=await api.getUserProfile();setUser(userData);setCurrentView('dashboard');}catch(error){console.error('Failed to fetch user profile:',error);localStorage.removeItem('token');}finally{setLoading(false);}};const handleLogin=async credentials=>{try{const response=await api.login(credentials);localStorage.setItem('token',response.token);setUser(response.user);setCurrentView('dashboard');showNotification('Login successful!','success');}catch(error){showNotification(error.message||'Login failed','error');}};const handleRegister=async userData=>{try{const response=await api.register(userData);localStorage.setItem('token',response.token);setUser(response.user);setCurrentView('dashboard');showNotification('Registration successful!','success');}catch(error){showNotification(error.message||'Registration failed','error');}};const handleLogout=()=>{localStorage.removeItem('token');setUser(null);setCurrentView('login');showNotification('Logged out successfully','success');};const handleViewChange=function(view){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;setCurrentView(view);if(view==='courseDetail'&&data){setSelectedCourse(data);}};const showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setNotification({message,type});setTimeout(()=>setNotification(null),5000);};const handleCourseEnroll=async courseId=>{try{await api.enrollInCourse(courseId);showNotification('Successfully enrolled in course!','success');// Refresh user data\nconst userData=await api.getUserProfile();setUser(userData);}catch(error){showNotification(error.message||'Enrollment failed','error');}};const handleCourseComplete=async(courseId,rating)=>{try{await api.completeCourse(courseId,rating);showNotification('Course completed successfully!','success');// Refresh user data\nconst userData=await api.getUserProfile();setUser(userData);}catch(error){showNotification(error.message||'Failed to complete course','error');}};if(loading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsx(ThemeProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[notification&&/*#__PURE__*/_jsxs(\"div\",{className:\"notification notification-\".concat(notification.type),children:[notification.message,/*#__PURE__*/_jsx(\"button\",{className:\"notification-close\",onClick:()=>setNotification(null),children:\"\\xD7\"})]}),user&&/*#__PURE__*/_jsx(Header,{user:user,currentView:currentView,onViewChange:handleViewChange,onLogout:handleLogout}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:!user?currentView==='register'?/*#__PURE__*/_jsx(Register,{onRegister:handleRegister,onSwitchToLogin:()=>setCurrentView('login')}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,onSwitchToRegister:()=>setCurrentView('register')}):/*#__PURE__*/_jsxs(_Fragment,{children:[currentView==='dashboard'&&/*#__PURE__*/_jsx(Dashboard,{user:user,onViewChange:handleViewChange,onShowNotification:showNotification}),currentView==='courses'&&/*#__PURE__*/_jsx(CourseList,{onCourseSelect:course=>handleViewChange('courseDetail',course),onShowNotification:showNotification}),currentView==='courseDetail'&&selectedCourse&&/*#__PURE__*/_jsx(CourseDetail,{course:selectedCourse,user:user,onEnroll:handleCourseEnroll,onComplete:handleCourseComplete,onBack:()=>handleViewChange('courses'),onShowNotification:showNotification}),currentView==='recommendations'&&/*#__PURE__*/_jsx(Recommendations,{onCourseSelect:course=>handleViewChange('courseDetail',course),onShowNotification:showNotification}),currentView==='profile'&&/*#__PURE__*/_jsx(Profile,{user:user,onUpdateUser:setUser,onShowNotification:showNotification})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","Login","Register","Dashboard","CourseList","CourseDetail","Profile","Recommendations","LoadingSpinner","ThemeProvider","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","user","setUser","currentView","setCurrentView","selectedCourse","setSelectedCourse","loading","setLoading","notification","setNotification","token","localStorage","getItem","fetchUserProfile","userData","getUserProfile","error","console","removeItem","handleLogin","credentials","response","login","setItem","showNotification","message","handleRegister","register","handleLogout","handleViewChange","view","data","arguments","length","undefined","type","setTimeout","handleCourseEnroll","courseId","enrollInCourse","handleCourseComplete","rating","completeCourse","children","className","concat","onClick","onViewChange","onLogout","onRegister","onSwitchToLogin","onLogin","onSwitchToRegister","onShowNotification","onCourseSelect","course","onEnroll","onComplete","onBack","onUpdateUser"],"sources":["D:/course/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\n// Components\r\nimport Header from './components/Header';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Dashboard from './components/Dashboard';\r\nimport CourseList from './components/CourseList';\r\nimport CourseDetail from './components/CourseDetail';\r\nimport Profile from './components/Profile';\r\nimport Recommendations from './components/Recommendations';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\n\r\n// Theme Provider\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\n\r\n// API Service\r\nimport * as api from './services/api';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [currentView, setCurrentView] = useState('dashboard');\r\n  const [selectedCourse, setSelectedCourse] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  // Check if user is logged in on app load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      fetchUserProfile();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const userData = await api.getUserProfile();\r\n      setUser(userData);\r\n      setCurrentView('dashboard');\r\n    } catch (error) {\r\n      console.error('Failed to fetch user profile:', error);\r\n      localStorage.removeItem('token');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (credentials) => {\r\n    try {\r\n      const response = await api.login(credentials);\r\n      localStorage.setItem('token', response.token);\r\n      setUser(response.user);\r\n      setCurrentView('dashboard');\r\n      showNotification('Login successful!', 'success');\r\n    } catch (error) {\r\n      showNotification(error.message || 'Login failed', 'error');\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (userData) => {\r\n    try {\r\n      const response = await api.register(userData);\r\n      localStorage.setItem('token', response.token);\r\n      setUser(response.user);\r\n      setCurrentView('dashboard');\r\n      showNotification('Registration successful!', 'success');\r\n    } catch (error) {\r\n      showNotification(error.message || 'Registration failed', 'error');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setCurrentView('login');\r\n    showNotification('Logged out successfully', 'success');\r\n  };\r\n\r\n  const handleViewChange = (view, data = null) => {\r\n    setCurrentView(view);\r\n    if (view === 'courseDetail' && data) {\r\n      setSelectedCourse(data);\r\n    }\r\n  };\r\n\r\n  const showNotification = (message, type = 'info') => {\r\n    setNotification({ message, type });\r\n    setTimeout(() => setNotification(null), 5000);\r\n  };\r\n\r\n  const handleCourseEnroll = async (courseId) => {\r\n    try {\r\n      await api.enrollInCourse(courseId);\r\n      showNotification('Successfully enrolled in course!', 'success');\r\n      // Refresh user data\r\n      const userData = await api.getUserProfile();\r\n      setUser(userData);\r\n    } catch (error) {\r\n      showNotification(error.message || 'Enrollment failed', 'error');\r\n    }\r\n  };\r\n\r\n  const handleCourseComplete = async (courseId, rating) => {\r\n    try {\r\n      await api.completeCourse(courseId, rating);\r\n      showNotification('Course completed successfully!', 'success');\r\n      // Refresh user data\r\n      const userData = await api.getUserProfile();\r\n      setUser(userData);\r\n    } catch (error) {\r\n      showNotification(error.message || 'Failed to complete course', 'error');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <div className=\"App\">\r\n        {notification && (\r\n          <div className={`notification notification-${notification.type}`}>\r\n            {notification.message}\r\n            <button\r\n              className=\"notification-close\"\r\n              onClick={() => setNotification(null)}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {user && (\r\n          <Header\r\n            user={user}\r\n            currentView={currentView}\r\n            onViewChange={handleViewChange}\r\n            onLogout={handleLogout}\r\n          />\r\n        )}\r\n\r\n        <main className=\"main-content\">\r\n          {!user ? (\r\n            currentView === 'register' ? (\r\n              <Register\r\n                onRegister={handleRegister}\r\n                onSwitchToLogin={() => setCurrentView('login')}\r\n              />\r\n            ) : (\r\n              <Login\r\n                onLogin={handleLogin}\r\n                onSwitchToRegister={() => setCurrentView('register')}\r\n              />\r\n            )\r\n          ) : (\r\n            <>\r\n              {currentView === 'dashboard' && (\r\n                <Dashboard\r\n                  user={user}\r\n                  onViewChange={handleViewChange}\r\n                  onShowNotification={showNotification}\r\n                />\r\n              )}\r\n\r\n              {currentView === 'courses' && (\r\n                <CourseList\r\n                  onCourseSelect={(course) => handleViewChange('courseDetail', course)}\r\n                  onShowNotification={showNotification}\r\n                />\r\n              )}\r\n\r\n              {currentView === 'courseDetail' && selectedCourse && (\r\n                <CourseDetail\r\n                  course={selectedCourse}\r\n                  user={user}\r\n                  onEnroll={handleCourseEnroll}\r\n                  onComplete={handleCourseComplete}\r\n                  onBack={() => handleViewChange('courses')}\r\n                  onShowNotification={showNotification}\r\n                />\r\n              )}\r\n\r\n              {currentView === 'recommendations' && (\r\n                <Recommendations\r\n                  onCourseSelect={(course) => handleViewChange('courseDetail', course)}\r\n                  onShowNotification={showNotification}\r\n                />\r\n              )}\r\n\r\n              {currentView === 'profile' && (\r\n                <Profile\r\n                  user={user}\r\n                  onUpdateUser={setUser}\r\n                  onShowNotification={showNotification}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </main>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}