{"ast":null,"code":"import _objectSpread from\"D:/course/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL='http://localhost:5000/api';// Helper function to get auth headers\nconst getAuthHeaders=()=>{const token=localStorage.getItem('token');return _objectSpread({'Content-Type':'application/json'},token&&{'Authorization':\"Bearer \".concat(token)});};// Helper function to handle API responses\nconst handleResponse=async response=>{if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.error||\"HTTP error! status: \".concat(response.status));}return response.json();};// Authentication APIs\nexport const login=async credentials=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/login\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify(credentials)});return handleResponse(response);};export const register=async userData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/register\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify(userData)});return handleResponse(response);};// User Profile APIs\nexport const getUserProfile=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/profile\"),{method:'GET',headers:getAuthHeaders()});return handleResponse(response);};export const updateUserProfile=async profileData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/profile\"),{method:'PUT',headers:getAuthHeaders(),body:JSON.stringify(profileData)});return handleResponse(response);};// Course APIs\nexport const getCourses=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryParams=new URLSearchParams();Object.entries(filters).forEach(_ref=>{let[key,value]=_ref;if(value&&value!=='all'){queryParams.append(key,value);}});const response=await fetch(\"\".concat(API_BASE_URL,\"/courses?\").concat(queryParams),{method:'GET',headers:getAuthHeaders()});return handleResponse(response);};export const getCourseById=async courseId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/courses/\").concat(courseId),{method:'GET',headers:getAuthHeaders()});return handleResponse(response);};export const enrollInCourse=async courseId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/courses/\").concat(courseId,\"/enroll\"),{method:'POST',headers:getAuthHeaders()});return handleResponse(response);};export const completeCourse=async function(courseId){let rating=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const response=await fetch(\"\".concat(API_BASE_URL,\"/courses/\").concat(courseId,\"/complete\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify({rating})});return handleResponse(response);};// Recommendations API\nexport const getRecommendations=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/recommendations\"),{method:'GET',headers:getAuthHeaders()});return handleResponse(response);};// Categories API\nexport const getCategories=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/categories\"),{method:'GET',headers:getAuthHeaders()});return handleResponse(response);};// Seed data (for development)\nexport const seedData=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/seed-data\"),{method:'POST',headers:getAuthHeaders()});return handleResponse(response);};","map":{"version":3,"names":["API_BASE_URL","getAuthHeaders","token","localStorage","getItem","_objectSpread","concat","handleResponse","response","ok","errorData","json","catch","Error","error","status","login","credentials","fetch","method","headers","body","JSON","stringify","register","userData","getUserProfile","updateUserProfile","profileData","getCourses","filters","arguments","length","undefined","queryParams","URLSearchParams","Object","entries","forEach","_ref","key","value","append","getCourseById","courseId","enrollInCourse","completeCourse","rating","getRecommendations","getCategories","seedData"],"sources":["D:/course/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Helper function to get auth headers\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { 'Authorization': `Bearer ${token}` })\r\n  };\r\n};\r\n\r\n// Helper function to handle API responses\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Authentication APIs\r\nexport const login = async (credentials) => {\r\n  const response = await fetch(`${API_BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify(credentials)\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  const response = await fetch(`${API_BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify(userData)\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// User Profile APIs\r\nexport const getUserProfile = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/profile`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const updateUserProfile = async (profileData) => {\r\n  const response = await fetch(`${API_BASE_URL}/profile`, {\r\n    method: 'PUT',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify(profileData)\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Course APIs\r\nexport const getCourses = async (filters = {}) => {\r\n  const queryParams = new URLSearchParams();\r\n  \r\n  Object.entries(filters).forEach(([key, value]) => {\r\n    if (value && value !== 'all') {\r\n      queryParams.append(key, value);\r\n    }\r\n  });\r\n\r\n  const response = await fetch(`${API_BASE_URL}/courses?${queryParams}`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const getCourseById = async (courseId) => {\r\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const enrollInCourse = async (courseId) => {\r\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}/enroll`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\nexport const completeCourse = async (courseId, rating = null) => {\r\n  const response = await fetch(`${API_BASE_URL}/courses/${courseId}/complete`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify({ rating })\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Recommendations API\r\nexport const getRecommendations = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/recommendations`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Categories API\r\nexport const getCategories = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/categories`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};\r\n\r\n// Seed data (for development)\r\nexport const seedData = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/seed-data`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders()\r\n  });\r\n  return handleResponse(response);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}